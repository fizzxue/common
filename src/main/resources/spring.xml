<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx.xsd">

    <!--配置声明式事务-->
    <!--传入的 DataSource 可以是任何能够与 Spring 兼容的 JDBC DataSource。包括连接池和通过 JNDI 查找获得的 DataSource。-->
    <bean class="org.springframework.jdbc.datasource.DataSourceTransactionManager" id="transactionManager">
        <property name="dataSource" ref="defaultDataSource"/>
    </bean>
<!--    <tx:advice id="interceptor" transaction-manager="transactionManager">-->
<!--        <tx:attributes>-->
<!--            &lt;!&ndash;这里的方法名要和接口里的方法名匹配&ndash;&gt;-->
<!--            &lt;!&ndash;propagation="REQUIRED"传播特性，默认REQUIRED&ndash;&gt;-->
<!--            <tx:method name="*add*" propagation="REQUIRED"/>-->
<!--            <tx:method name="*delete*" propagation="REQUIRED"/>-->
<!--            <tx:method name="*update*" propagation="REQUIRED"/>-->
<!--            <tx:method name="*User*" propagation="REQUIRED"/>-->
<!--            <tx:method name="*query*" read-only="true"/>-->
<!--        </tx:attributes>-->
<!--    </tx:advice>-->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <!-- the transactional semantics... -->
        <tx:attributes>
            <!-- all methods starting with 'get' are read-only -->
            <tx:method name="*" propagation="REQUIRED" rollback-for="Exception"/>
<!--            <tx:method name="checkAll*" propagation="REQUIRES_NEW" rollback-for="Exception"/>-->
            <tx:method name="updateById*" propagation="REQUIRES_NEW" rollback-for="Exception"/>
            <!-- other methods use the default transaction settings (see below) -->
        </tx:attributes>
    </tx:advice>

    <!-- ensure that the above transactional advice runs for any execution
        of an operation defined by the FooService interface -->
<!--    <aop:config>-->
<!--        <aop:pointcut id="fooServiceOperation" expression="execution(* com.fizz.*..*.*(..))"/>-->
<!--        <aop:advisor advice-ref="txAdvice" pointcut-ref="fooServiceOperation"/>-->
<!--    </aop:config>-->

<!--    <aop:aspectj-autoproxy proxy-target-class="true"/>-->

</beans>
